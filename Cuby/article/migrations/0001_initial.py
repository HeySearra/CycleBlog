# Generated by Django 3.0.3 on 2020-06-04 21:48

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=256, verbose_name='标题')),
                ('abstract', models.CharField(default='', max_length=256, verbose_name='摘要')),
                ('content', models.TextField(default='', verbose_name='全文')),
                ('views', models.IntegerField(default=0, verbose_name='阅读量')),
                ('view_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天阅读次数')),
                ('star_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天收藏次数')),
                ('like_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天被点赞次数')),
                ('comment_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天被评论次数')),
                ('view_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被查看时间')),
                ('star_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被收藏时间')),
                ('like_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被点赞时间')),
                ('comment_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被评论时间')),
                ('url', models.CharField(default='', max_length=256, verbose_name='文章url')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('edit_time', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
                ('recycle_time', models.DateTimeField(null=True, verbose_name='删除时间')),
                ('blocked', models.BooleanField(blank=True, default=False, verbose_name='被封禁')),
                ('recycled', models.BooleanField(blank=True, default=False, verbose_name='在回收站里')),
                ('is_top', models.BooleanField(default=False, verbose_name='被置顶')),
                ('add_into_column_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='加入专栏的时间')),
                ('tag', models.CharField(default='', max_length=128, verbose_name='主标签')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_author', to='user.User')),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=256, verbose_name='专栏名称')),
                ('views', models.IntegerField(blank=True, default=0, verbose_name='阅读量')),
                ('article_num', models.IntegerField(blank=True, default=0, verbose_name='文章数量')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=512, verbose_name='内容')),
                ('blocked', models.BooleanField(default=False, verbose_name='被封禁')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_comment_author', to='user.User')),
                ('fa_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_article', to='article.Article')),
                ('fa_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_comment', to='article.ArticleComment')),
                ('who_like', models.ManyToManyField(to='user.User', verbose_name='like_person')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='column',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='article.Column'),
        ),
        migrations.AddField(
            model_name='article',
            name='who_like',
            field=models.ManyToManyField(related_name='like_person', to='user.User', verbose_name='like_person'),
        ),
        migrations.AddField(
            model_name='article',
            name='who_star',
            field=models.ManyToManyField(related_name='star_person', to='user.User', verbose_name='star_person'),
        ),
    ]
