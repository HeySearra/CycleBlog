# Generated by Django 3.0.3 on 2020-06-04 21:48

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_owner', to='user.User')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=256, verbose_name='标题')),
                ('description', models.CharField(blank=True, default='', max_length=256, verbose_name='描述')),
                ('file_path', models.FileField(blank=True, default='', max_length=256, upload_to='', verbose_name='资源路径')),
                ('file_size', models.CharField(blank=True, default='', max_length=256, verbose_name='大小')),
                ('views', models.IntegerField(blank=True, default=0, verbose_name='阅读量')),
                ('view_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天阅读次数')),
                ('star_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天收藏次数')),
                ('like_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天被点赞次数')),
                ('comment_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天被评论次数')),
                ('point_day', models.IntegerField(blank=True, default=0, verbose_name='最近一天得的积分数')),
                ('view_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被查看时间')),
                ('star_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被收藏时间')),
                ('like_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被点赞时间')),
                ('comment_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被评论时间')),
                ('point_date', models.DateField(blank=True, default=datetime.date(1900, 1, 1), verbose_name='最近被下载时间')),
                ('points', models.IntegerField(blank=True, default=0, verbose_name='所需积分')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('edit_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('blocked', models.BooleanField(blank=True, default=False, verbose_name='被封禁')),
                ('tag', models.CharField(default='', max_length=128, verbose_name='主标签')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_author', to='user.User')),
                ('who_buy', models.ManyToManyField(related_name='person_buy', to='user.User', verbose_name='购买的人')),
                ('who_like', models.ManyToManyField(related_name='person_like', to='user.User', verbose_name='点赞的人')),
                ('who_star', models.ManyToManyField(related_name='person_star', to='user.User', verbose_name='收藏的人')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=512, verbose_name='内容')),
                ('blocked', models.BooleanField(default=False, verbose_name='被封禁')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resource_comment_author', to='user.User')),
                ('fa_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_comment', to='resource.ResourceComment')),
                ('fa_resource', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_resource', to='resource.Resource')),
                ('who_like', models.ManyToManyField(to='user.User', verbose_name='like_person')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('download', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource.Download')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource.Resource')),
            ],
        ),
        migrations.AddField(
            model_name='download',
            name='resources',
            field=models.ManyToManyField(through='resource.DownloadMembership', to='resource.Resource'),
        ),
    ]
